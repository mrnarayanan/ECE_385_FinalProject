--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=25 LPM_WIDTH=5 data eq
--VERSION_BEGIN 15.0 cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_lpm_decode 2015:04:22:18:04:08:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_5aa
( 
	data[4..0]	:	input;
	eq[24..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[24..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode358w[2..0]	: WIRE;
	w_anode372w[3..0]	: WIRE;
	w_anode389w[3..0]	: WIRE;
	w_anode399w[3..0]	: WIRE;
	w_anode409w[3..0]	: WIRE;
	w_anode419w[3..0]	: WIRE;
	w_anode429w[3..0]	: WIRE;
	w_anode439w[3..0]	: WIRE;
	w_anode449w[3..0]	: WIRE;
	w_anode461w[2..0]	: WIRE;
	w_anode471w[3..0]	: WIRE;
	w_anode482w[3..0]	: WIRE;
	w_anode492w[3..0]	: WIRE;
	w_anode502w[3..0]	: WIRE;
	w_anode512w[3..0]	: WIRE;
	w_anode522w[3..0]	: WIRE;
	w_anode532w[3..0]	: WIRE;
	w_anode542w[3..0]	: WIRE;
	w_anode553w[2..0]	: WIRE;
	w_anode563w[3..0]	: WIRE;
	w_anode574w[3..0]	: WIRE;
	w_anode584w[3..0]	: WIRE;
	w_anode594w[3..0]	: WIRE;
	w_anode604w[3..0]	: WIRE;
	w_anode614w[3..0]	: WIRE;
	w_anode624w[3..0]	: WIRE;
	w_anode634w[3..0]	: WIRE;
	w_anode645w[2..0]	: WIRE;
	w_anode655w[3..0]	: WIRE;
	w_anode666w[3..0]	: WIRE;
	w_anode676w[3..0]	: WIRE;
	w_anode686w[3..0]	: WIRE;
	w_anode696w[3..0]	: WIRE;
	w_anode706w[3..0]	: WIRE;
	w_anode716w[3..0]	: WIRE;
	w_anode726w[3..0]	: WIRE;
	w_data356w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[24..0] = eq_wire[24..0];
	eq_wire[] = ( ( w_anode726w[3..3], w_anode716w[3..3], w_anode706w[3..3], w_anode696w[3..3], w_anode686w[3..3], w_anode676w[3..3], w_anode666w[3..3], w_anode655w[3..3]), ( w_anode634w[3..3], w_anode624w[3..3], w_anode614w[3..3], w_anode604w[3..3], w_anode594w[3..3], w_anode584w[3..3], w_anode574w[3..3], w_anode563w[3..3]), ( w_anode542w[3..3], w_anode532w[3..3], w_anode522w[3..3], w_anode512w[3..3], w_anode502w[3..3], w_anode492w[3..3], w_anode482w[3..3], w_anode471w[3..3]), ( w_anode449w[3..3], w_anode439w[3..3], w_anode429w[3..3], w_anode419w[3..3], w_anode409w[3..3], w_anode399w[3..3], w_anode389w[3..3], w_anode372w[3..3]));
	w_anode358w[] = ( (w_anode358w[1..1] & (! data_wire[4..4])), (w_anode358w[0..0] & (! data_wire[3..3])), B"1");
	w_anode372w[] = ( (w_anode372w[2..2] & (! w_data356w[2..2])), (w_anode372w[1..1] & (! w_data356w[1..1])), (w_anode372w[0..0] & (! w_data356w[0..0])), w_anode358w[2..2]);
	w_anode389w[] = ( (w_anode389w[2..2] & (! w_data356w[2..2])), (w_anode389w[1..1] & (! w_data356w[1..1])), (w_anode389w[0..0] & w_data356w[0..0]), w_anode358w[2..2]);
	w_anode399w[] = ( (w_anode399w[2..2] & (! w_data356w[2..2])), (w_anode399w[1..1] & w_data356w[1..1]), (w_anode399w[0..0] & (! w_data356w[0..0])), w_anode358w[2..2]);
	w_anode409w[] = ( (w_anode409w[2..2] & (! w_data356w[2..2])), (w_anode409w[1..1] & w_data356w[1..1]), (w_anode409w[0..0] & w_data356w[0..0]), w_anode358w[2..2]);
	w_anode419w[] = ( (w_anode419w[2..2] & w_data356w[2..2]), (w_anode419w[1..1] & (! w_data356w[1..1])), (w_anode419w[0..0] & (! w_data356w[0..0])), w_anode358w[2..2]);
	w_anode429w[] = ( (w_anode429w[2..2] & w_data356w[2..2]), (w_anode429w[1..1] & (! w_data356w[1..1])), (w_anode429w[0..0] & w_data356w[0..0]), w_anode358w[2..2]);
	w_anode439w[] = ( (w_anode439w[2..2] & w_data356w[2..2]), (w_anode439w[1..1] & w_data356w[1..1]), (w_anode439w[0..0] & (! w_data356w[0..0])), w_anode358w[2..2]);
	w_anode449w[] = ( (w_anode449w[2..2] & w_data356w[2..2]), (w_anode449w[1..1] & w_data356w[1..1]), (w_anode449w[0..0] & w_data356w[0..0]), w_anode358w[2..2]);
	w_anode461w[] = ( (w_anode461w[1..1] & (! data_wire[4..4])), (w_anode461w[0..0] & data_wire[3..3]), B"1");
	w_anode471w[] = ( (w_anode471w[2..2] & (! w_data356w[2..2])), (w_anode471w[1..1] & (! w_data356w[1..1])), (w_anode471w[0..0] & (! w_data356w[0..0])), w_anode461w[2..2]);
	w_anode482w[] = ( (w_anode482w[2..2] & (! w_data356w[2..2])), (w_anode482w[1..1] & (! w_data356w[1..1])), (w_anode482w[0..0] & w_data356w[0..0]), w_anode461w[2..2]);
	w_anode492w[] = ( (w_anode492w[2..2] & (! w_data356w[2..2])), (w_anode492w[1..1] & w_data356w[1..1]), (w_anode492w[0..0] & (! w_data356w[0..0])), w_anode461w[2..2]);
	w_anode502w[] = ( (w_anode502w[2..2] & (! w_data356w[2..2])), (w_anode502w[1..1] & w_data356w[1..1]), (w_anode502w[0..0] & w_data356w[0..0]), w_anode461w[2..2]);
	w_anode512w[] = ( (w_anode512w[2..2] & w_data356w[2..2]), (w_anode512w[1..1] & (! w_data356w[1..1])), (w_anode512w[0..0] & (! w_data356w[0..0])), w_anode461w[2..2]);
	w_anode522w[] = ( (w_anode522w[2..2] & w_data356w[2..2]), (w_anode522w[1..1] & (! w_data356w[1..1])), (w_anode522w[0..0] & w_data356w[0..0]), w_anode461w[2..2]);
	w_anode532w[] = ( (w_anode532w[2..2] & w_data356w[2..2]), (w_anode532w[1..1] & w_data356w[1..1]), (w_anode532w[0..0] & (! w_data356w[0..0])), w_anode461w[2..2]);
	w_anode542w[] = ( (w_anode542w[2..2] & w_data356w[2..2]), (w_anode542w[1..1] & w_data356w[1..1]), (w_anode542w[0..0] & w_data356w[0..0]), w_anode461w[2..2]);
	w_anode553w[] = ( (w_anode553w[1..1] & data_wire[4..4]), (w_anode553w[0..0] & (! data_wire[3..3])), B"1");
	w_anode563w[] = ( (w_anode563w[2..2] & (! w_data356w[2..2])), (w_anode563w[1..1] & (! w_data356w[1..1])), (w_anode563w[0..0] & (! w_data356w[0..0])), w_anode553w[2..2]);
	w_anode574w[] = ( (w_anode574w[2..2] & (! w_data356w[2..2])), (w_anode574w[1..1] & (! w_data356w[1..1])), (w_anode574w[0..0] & w_data356w[0..0]), w_anode553w[2..2]);
	w_anode584w[] = ( (w_anode584w[2..2] & (! w_data356w[2..2])), (w_anode584w[1..1] & w_data356w[1..1]), (w_anode584w[0..0] & (! w_data356w[0..0])), w_anode553w[2..2]);
	w_anode594w[] = ( (w_anode594w[2..2] & (! w_data356w[2..2])), (w_anode594w[1..1] & w_data356w[1..1]), (w_anode594w[0..0] & w_data356w[0..0]), w_anode553w[2..2]);
	w_anode604w[] = ( (w_anode604w[2..2] & w_data356w[2..2]), (w_anode604w[1..1] & (! w_data356w[1..1])), (w_anode604w[0..0] & (! w_data356w[0..0])), w_anode553w[2..2]);
	w_anode614w[] = ( (w_anode614w[2..2] & w_data356w[2..2]), (w_anode614w[1..1] & (! w_data356w[1..1])), (w_anode614w[0..0] & w_data356w[0..0]), w_anode553w[2..2]);
	w_anode624w[] = ( (w_anode624w[2..2] & w_data356w[2..2]), (w_anode624w[1..1] & w_data356w[1..1]), (w_anode624w[0..0] & (! w_data356w[0..0])), w_anode553w[2..2]);
	w_anode634w[] = ( (w_anode634w[2..2] & w_data356w[2..2]), (w_anode634w[1..1] & w_data356w[1..1]), (w_anode634w[0..0] & w_data356w[0..0]), w_anode553w[2..2]);
	w_anode645w[] = ( (w_anode645w[1..1] & data_wire[4..4]), (w_anode645w[0..0] & data_wire[3..3]), B"1");
	w_anode655w[] = ( (w_anode655w[2..2] & (! w_data356w[2..2])), (w_anode655w[1..1] & (! w_data356w[1..1])), (w_anode655w[0..0] & (! w_data356w[0..0])), w_anode645w[2..2]);
	w_anode666w[] = ( (w_anode666w[2..2] & (! w_data356w[2..2])), (w_anode666w[1..1] & (! w_data356w[1..1])), (w_anode666w[0..0] & w_data356w[0..0]), w_anode645w[2..2]);
	w_anode676w[] = ( (w_anode676w[2..2] & (! w_data356w[2..2])), (w_anode676w[1..1] & w_data356w[1..1]), (w_anode676w[0..0] & (! w_data356w[0..0])), w_anode645w[2..2]);
	w_anode686w[] = ( (w_anode686w[2..2] & (! w_data356w[2..2])), (w_anode686w[1..1] & w_data356w[1..1]), (w_anode686w[0..0] & w_data356w[0..0]), w_anode645w[2..2]);
	w_anode696w[] = ( (w_anode696w[2..2] & w_data356w[2..2]), (w_anode696w[1..1] & (! w_data356w[1..1])), (w_anode696w[0..0] & (! w_data356w[0..0])), w_anode645w[2..2]);
	w_anode706w[] = ( (w_anode706w[2..2] & w_data356w[2..2]), (w_anode706w[1..1] & (! w_data356w[1..1])), (w_anode706w[0..0] & w_data356w[0..0]), w_anode645w[2..2]);
	w_anode716w[] = ( (w_anode716w[2..2] & w_data356w[2..2]), (w_anode716w[1..1] & w_data356w[1..1]), (w_anode716w[0..0] & (! w_data356w[0..0])), w_anode645w[2..2]);
	w_anode726w[] = ( (w_anode726w[2..2] & w_data356w[2..2]), (w_anode726w[1..1] & w_data356w[1..1]), (w_anode726w[0..0] & w_data356w[0..0]), w_anode645w[2..2]);
	w_data356w[2..0] = data_wire[2..0];
END;
--VALID FILE
